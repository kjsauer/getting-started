## Git for Windows
Install Git for Windows
Use default options during installation
Recommend latest version (i.e., v2.12 or above)
Earlier versions have bug with “//REMOTE_SERVER_FOLDER” where earlier versions cannot read “//”
In earlier versions, you could only use mapped drives “MAPPED_DRIVE:/”

## NB
Always pull in changes from Remote Server hosting Git folders into Local Computer,
Before you push from your Local Computer into the Remote Server
aka
Always update your Local Computer based on changes in the Remote Server,
Before you commit Local Computer changes to Remote Server

## Initiate Git Repo on Remote Non-GitHub Server
Navigate to folder in Remote Git
Launch Git bash
NB: Use CMD in place of bash whenever possible
NB: Install Git for Windows to have CMD integration
Navigate via "cd PATHNAME" in the Windows command prompt window CMD
Can also right click --> Git Bash from context menu
Set up Git folder via Git Bash
$ git init --bare git-repo-name.git

## NB
Do not add to or delete from .git folders
Instead, clone .git folders from the remote server hosting the repo
Clone that repo into your local Git sandbox folder
Make changes locally and sync with remote folders
You can call your local folder of Git repos whatever you want
I store mine in My Documents on a PC

## NB
Use dashes between words in repo name, not spaces or underscores

## For MATLAB Users
Open MATLAB (IDE; not sure if there is MATLAB sans IDE)
Navigate to folder via file explorer window
Right click in window area (not on file)
Source control
Manage files
Sandbox on PC is C:\Users\USERNAME\Documents\Git
Remote is GIT_REPO_FILENAME.git

## Other References
https://help.github.com/articles/adding-an-existing-project-to-github-using-the-command-line/

## Other Git Syntax
$ git push origin master [push from local client to remote server master branch]
$ git pull origin master [pull from remote server master branch to client]
$ git status [get status of local client]
$ git add filename.fileExtension [track, i.e., version control, a file]
$ git push --all origin [???]
$ git commit -m 'test file' --C:/Users/USERNAME/Documents/Git/GIT_PROJECT_DIR/FILENAME.m [commit a single MATLAB file]

## Git GUI
Try also the Git GUI which can be launched from the right click context menu of Git for Windows
Edit\Options to update email address in Git GUI

## NB
Remove old branches on local machine
https://git-scm.com/book/en/v2/Git-Branching-Branch-Management
Navigate to git repo
$ pwd to show present working directory
Use $ cd to navigate to git repo
Use $ cd + space + tab for tab completion
Get to master branch (ignore $)
$ git checkout master
Pull latest and greatest from remote
$ git pull
Enter GitHub credentials
Delete branches using either
$ git branch -d ______
or
$ git branch -D ______

## Test Add File
$ git pull origin master
This should open a text editor
Test commit
$ git commit
$ git push origin master

## Add File to Repo in Git Terminal
Now add test file into repo
$ echo content > newFile.txt
$ git status
$ git add newFile.txt
$ git status
$ git commit --message="test commit"
$ git status
May need to run:
$ git branch --unset-upstream

## Check Git Repo Details
Check user name
$ git config user.name
Check user email
$ git config user.email

## Update User Info
Git bash into local repo
$ git config --list
Update user email
$ git config --local user.email "YOUR.NAME@EMAILDOMAIN.com
$ git config --local user.email "GITHUB_USERNAME@users.noreply.github.com"
To update all repos use “global” in place of “local”
Update user name
$ git config --global user.name "YOUR NAME"

## Set Up User Name and Email
Navigate to local repo folder
Right click --> Git Bash
Or cd in using Git Bash or Windows CMD
Review settings
$ git config --list
Add new settings
$ git config --local user.name "Firstname Lastname"
$ git config --local user.email "firstname.lastname@emailprovider.com"
Review settings
$ git config --list
This command might fail if not done in Windows Command Prompt

## Add example .gitattributes template file to repo
See template file in repo intended to cover: Common, MATLAB, Python, R
References: https://github.com/alexkaratarakis/gitattributes

## Add .gitignore file to repo
See template file in repo intended to cover: Windows, MacOS, and MATLAB
References: https://github.com/github/gitignore/

## Proceed to Upload Real Content
Delete test file
Upload all content
Commit
Sync aka Publish

## NB
Add repo to GitHub Desktop
Commit test text file and attempt Publish
If Publish fails and you are on VPN or DirectAccess
Proceed to troubleshoot according to provided instructions
May need to open git bash within the local repo folder
$ git status
Enter command per displayed instructions
Repeat git status to ensure that fix works

## Add Test Commit File to Repo -- Example
no .git after FILENAME unless specified
$ cd GIT_REPO_FULLFILEPATHNAME
$ git pull origin master
$ echo "test commit" >> CommitTest.txt
dot adds all
$ git add .
OR use
$ git add CommitTest.txt
$ git diff CommitTest.txt
commit to master
$ git commit -m "Test commit"
$ git commit --help
$ git push origin master

## Delete Test File from Repo -- Example
$ git status
$ git rm CommitTest.txt
commit to master
$ git commit -m "Deleted test commit"
$ git status
$ git push origin master
now repo should be empty again

## GitHub Desktop
If you use GitHub Desktop, you can add any local Git repo to it
Even if it is not a repo hosted on GitHub
This enables you to track changes in all repos with one GUI

## end