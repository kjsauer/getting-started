# Getting Started with Microsoft MS Excel Visual Basic VBA
Kenneth J. Sauer (@kjsauer on GitHub)

## NB
Here, "Excel" refers to Microsoft's Excel (MS Excel). VBA refers to Visual Basic - the coding (aka programming) language which comes prepackaged w/ Excel.

## Add Developer Tab to Microsoft MS Excel
Microsoft MS Excel > File > Options > Customize Ribbon > Add Developer tab
No changes to Trust Settings needed

## Open VBA Development Environment
Alt + F11

## Run Macro
Alt + F8 > Select Macro > Run

## Multiply Two Columns of Equal Length into Third Column of Equal Length
Need to use FOR loop!
Think of it like how you would execute it in the spreadsheet (need equation in each cell of third column; add first, then drag down for the rest)

## Hot Key to Comment Out or Uncomment Line of Code in MS Excel VBA
"""Now you can select a single line or a block of code and press Alt+C on your keyboard to comment. To enable the same option for uncommenting a code, you can repeat the whole process for Uncomment Block command. The shortcut for uncommenting is ALT+U."""
Source: https://www.automateexcel.com/vba/comment/

## Continue Onto Next Line of Code in MS Excel VBA
a + _
b + _
c

## Git Version Control MS Excel VBA
File > Export File - export copy of code to version control module as .bas file

## Multiple Linear Regression in Excel VBA
Sub GetRegressionStatistics()
Dim rY As Range, rX As Range
Dim vStat As Variant

Set rY = Range("YRange")
Set rX = Application.Union(Range("X1Range"), Range("X2Range"), Range("X3Range"))

vStat = Application.WorksheetFunction.LinEst(rY, rX, True, True)

MsgBox "Degrees of Freedom: " & vStat(4, 1) & vbNewLine & _
       "Sum Square for Regression: " & vStat(5, 1)

End Sub
Source: https://www.mrexcel.com/board/threads/multiple-linear-regression-in-vba.347468/

## Use of NaN in VBA
Application.WorksheetFunction.IsNA(1)

## Logic
True is -1 (!!!)
False is 0

## Indexing
Vector/array/matrix indexing starts w/ 0, not 1!
However, first row in Excel worksheet is row 1!

## Calling Excel Functions from Within Functions
Outside function:
$ Application.WorksheetFunction.FcnName(...)
Inside function:
$ Application.FcnName(...)
Source: https://software-solutions-online.com/unable-to-get-match-property-of-worksheetfunction/

## Activate Worksheet in Code
Worksheet("Insert Name").Activate
Source: https://developerpublish.com/active-sheet-select-sheet-in-excel-vba/

## Debugging - How to View Workspace Variables in Excel VBA?
Add to code:
$ Debug.Print myVariable
View in Immediate Window (View > Immediate Window)

## Convert Variable to Range in Excel VBA
Use vector array (vs. scalar value or matrix) here as example only:
First, must save variable array (e.g., vector array of doubles, variants, etc.) into (i.e., print to) an actual Excel spreadsheet tab (e.g., table of values)
Then, read back out as desired range
Need to do in a FOR loop (in Excel VBA) over full length of array!