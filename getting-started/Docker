# Getting Started with Docker
Kenneth J. Sauer (kjsauer on GitHub)

## Synoposis of Docker
Manages compatibilities
Containerizes code environments, e.g., Python dependencies
e.g., So server-side software can run on various client-side machines, and so the server or client-side machines can call in & run various software programs or code

## From Docker Installation: getting-started
1. Clone a Git repo:
$ docker run --name repo alpine/git clone https://github.com/docker/getting-started.git
$ docker cp repo:/git/getting-started/ .
2. Build Docker image--private file system for just your container providing all files & code the container needs:
$ cd getting-started
$ docker build -t docker101tutorial .
3. Run first Docker container:
$ docker run -d -p 80:80 --name docker-tutorial docker101tutorial
4. Save and share Docker image:
$ docker tag docker101tutorial [userName]/docker101tutorial
$ docker push [userName]/docker101tutorial

## Definitions
-d - run the container in detached mode (in the background)
-p 80:80 - map port 80 of the host to port 80 in the container
docker/getting-started - the image to use

## Debugging & Troubleshooting
Traceback to buggy line exists (thankfully!)